{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/netflix-clone/src/Banner.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport requests from './requests';\n\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      // const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n      return request;\n    }\n\n    fetchData();\n  }, []);\n  console.log(movie);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  });\n}\n\nexport default Banner;","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/netflix-clone/src/Banner.js"],"names":["React","useState","useEffect","axios","requests","Banner","movie","setMovie","fetchData","request","data","results","Math","floor","random","length","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,MAAT,GAAkB;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEFC,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeM,SAAf,GAA0B;AACzB;AACCD,MAAAA,QAAQ,CACPE,OAAO,CAACC,IAAR,CAAaC,OAAb,CACAC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,OAAO,CAACC,IAAR,CAAaC,OAAb,CAAqBI,MAArC,GAA4C,CAAvD,CADA,CADO,CAAR;AAKA,aAAON,OAAP;AACD;;AACDD,IAAAA,SAAS;AACT,GAXQ,EAWP,EAXO,CAAT;AAYAQ,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACA,sBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN;AAMA;;AACD,eAAeD,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from './axios';\nimport requests from './requests';\n\nfunction Banner (){\n   const [movie, setMovie] = useState([]);\n\n\tuseEffect(() => {\n\t\tasync function fetchData(){\n\t\t // const request = await axios.get(requests.fetchNetflixOriginals);\n\t\t  setMovie(\n\t\t  \trequest.data.results[\n\t\t  \tMath.floor(Math.random() * request.data.results.length-1)\n\t\t  \t]\n\t\t )\n\t\t  return request;\n\t }\n\t fetchData()\n\t},[])\n\tconsole.log(movie)\n\treturn (\n       <header>\n\t\t{}\n\t\t{}\n\t   </header>\n\t)\n}\nexport default Banner;"]},"metadata":{},"sourceType":"module"}