{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/netflix-clone/src/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl); // console.log(request.data.results)\n\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]);\n  console.log(movies);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: `row_posters ${isLargeRow && \"row_posterLarge\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, movies.map(movies => /*#__PURE__*/React.createElement(\"img\", {\n    key: movie.id,\n    className: \"row_poster\" // src={`${base_url} ${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n    ,\n    src: `${base_url} ${movies.poster_path}`,\n    alt: movie.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","id","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAb,EAA2C;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACd,mBAAeS,SAAf,GAA0B;AACzB,YAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUN,QAAV,CAAtB,CADyB,CAEzB;;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACA;;AACDD,IAAAA,SAAS;AACT,GARQ,EAQP,CAACJ,QAAD,CARO,CAAT;AASAS,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADD,eAGE;AAAK,IAAA,SAAS,EAAG,eAAcE,UAAU,IAAI,iBAAkB,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACS,GAAP,CAAWT,MAAM,iBACpB;AACC,IAAA,GAAG,EAAEU,KAAK,CAACC,EADZ;AAEC,IAAA,SAAS,EAAC,YAFX,CAGA;AAHA;AAIA,IAAA,GAAG,EAAG,GAAEhB,QAAS,IAAGK,MAAM,CAACY,WAAY,EAJvC;AAI0C,IAAA,GAAG,EAAEF,KAAK,CAACG,IAJrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADL,CAHF,CADD;AAeA;;AAED,eAAejB,GAAf","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport axios from './axios';\nimport './Row.css';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\n\nfunction Row({title, fetchUrl, isLargeRow}){ \n\tconst [movies, setMovies]= useState([]);\n\n\n\tuseEffect(()=> {\n\t\tasync function fetchData(){\n\t\t\tconst request = await axios.get(fetchUrl);\n\t\t\t// console.log(request.data.results)\n\t\t\tsetMovies(request.data.results)\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\t},[fetchUrl])\n\tconsole.log(movies)\n\treturn (\n\t\t<div className=\"row\">\n\t\t <h2>{title}</h2>\n\n\t\t  <div className={`row_posters ${isLargeRow && \"row_posterLarge\"}`}>\n\t\t   \t  {movies.map(movies => (\n\t\t   \t<img \n\t\t\t   \tkey={movie.id}\n\t\t\t   \tclassName=\"row_poster\"\n\t\t   \t// src={`${base_url} ${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n\t\t   \tsrc={`${base_url} ${movies.poster_path}`} alt={movie.name}/>\n\t\t   ))}\n\t\t  </div>\n\t\t</div>\n\t)\n}\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}