{"ast":null,"code":"var _jsxFileName = \"/Users/AllanSendagi/Desktop/netflix-clone/src/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport './Row.css';\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await instance.get(fetchUrl);\n      console.log(request.data.results);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchUrl]); // console.log(movies)\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: `row_posters ${isLargeRow && \"row_posterLarge\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"img\", {\n    key: movie.id,\n    className: \"row_poster\" // src={`${base_url} ${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n    ,\n    src: `${base_url} ${movie.poster_path}`,\n    alt: movie.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/AllanSendagi/Desktop/netflix-clone/src/Row.js"],"names":["React","useState","useEffect","axios","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","instance","get","console","log","data","results","map","movie","id","poster_path","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,sCAAjB;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAb,EAA2C;AAC1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACd,mBAAeS,SAAf,GAA0B;AACzB,YAAMC,OAAO,GAAG,MAAMC,QAAQ,CAACC,GAAT,CAAaP,QAAb,CAAtB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,IAAR,CAAaC,OAAzB;AACAR,MAAAA,SAAS,CAACE,OAAO,CAACK,IAAR,CAAaC,OAAd,CAAT;AACA,aAAON,OAAP;AACA;;AACDD,IAAAA,SAAS;AACT,GARQ,EAQP,CAACJ,QAAD,CARO,CAAT,CAJ0C,CAa1C;;AACA,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADD,eAEE;AAAK,IAAA,SAAS,EAAG,eAAcE,UAAU,IAAI,iBAAkB,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOC,MAAM,CAACU,GAAP,CAAWC,KAAK,iBACrB;AACA,IAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,IAAA,SAAS,EAAC,YAFV,CAGA;AAHA;AAIA,IAAA,GAAG,EAAG,GAAEjB,QAAS,IAAGgB,KAAK,CAACE,WAAY,EAJtC;AAIyC,IAAA,GAAG,EAAEF,KAAK,CAACG,IAJpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CADP,CAFF,CADD;AAcA;;AAED,eAAelB,GAAf","sourcesContent":["import React, {useState, useEffect}from 'react';\nimport axios from './axios';\nimport './Row.css';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\n\nfunction Row({title, fetchUrl, isLargeRow}){ \n\tconst [movies, setMovies]= useState([]);\n\n\n\tuseEffect(()=> {\n\t\tasync function fetchData(){\n\t\t\tconst request = await instance.get(fetchUrl);\n\t\t\tconsole.log(request.data.results)\n\t\t\tsetMovies(request.data.results)\n\t\t\treturn request;\n\t\t}\n\t\tfetchData();\n\t},[fetchUrl])\n\t// console.log(movies)\n\treturn (\n\t\t<div className=\"row\">\n\t\t <h2>{title}</h2>\n\t\t  <div className={`row_posters ${isLargeRow && \"row_posterLarge\"}`}>\n\t\t   \t\t   {movies.map(movie => (\n\t\t   \t<img \n\t\t   \tkey={movie.id}\n\t\t   \tclassName=\"row_poster\"\n\t\t   \t// src={`${base_url} ${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n\t\t   \tsrc={`${base_url} ${movie.poster_path}`} alt={movie.name}/>\n\t\t   ))}\n\t\t  </div>\n\t\t</div>\n\t)\n}\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}